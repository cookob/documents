(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{377:function(v,t,i){"use strict";i.r(t);var e=i(42),_=Object(e.a)({},(function(){var v=this,t=v.$createElement,i=v._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"view初步"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#view初步"}},[v._v("#")]),v._v(" View初步")]),v._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),i("p",[v._v("本节内容：")]),v._v(" "),i("p",[v._v("一．View的基本概念（View就是类，是个对象）")]),v._v(" "),i("p",[v._v("二．在Activity中获取代表View的对象")]),v._v(" "),i("p",[v._v("三．设置View的属性")]),v._v(" "),i("p",[v._v("四．为View设置监听器（作用主要是为用户进行交互的）")])]),v._v(" "),i("h2",{attrs:{id:"一、view的基本概念"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#一、view的基本概念"}},[v._v("#")]),v._v(" 一、View的基本概念")]),v._v(" "),i("p",[v._v("View就是在Activity上显示的出来的所有的控件（在Activity上显示的出来的所有的控件，在Android技术体系中，它的学名就是View），")]),v._v(" "),i("p",[v._v("为什么叫做View呢？因为在Activity中显示的控件都是用对象来表示的，那必然就有生成这个对象的类（比如TextView这个类会生成文本框的对象、Button这个类会生成按钮的对象等等，每一个类对应一个控件，就连布局也一样[例如相对布局、线性布局]），")]),v._v(" "),i("p",[v._v("这些类都是由Android提供的额，而这些类统统都是View的子类，也就是说View这个类是所有控件类的父类，所以说我们把Activity的控件都称之为一个View，根据面向对象的特性，我们需要首先掌握View这个类。")]),v._v(" "),i("h2",{attrs:{id:"二、在activity中获取代表view的对象"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#二、在activity中获取代表view的对象"}},[v._v("#")]),v._v(" 二、在Activity中获取代表View的对象")]),v._v(" "),i("p",[v._v("通过"),i("code",[v._v("findViewById(R.id.viewID)")]),v._v("方法来获取到这个代表View的对象，")]),v._v(" "),i("p",[v._v("返回值是View类型的，需强转成自己需要的类型。")]),v._v(" "),i("p",[v._v("首先在Activity中声明相应控件类型的变量，注意其类型与变量名要同布局文件中定义的控件的名字一致（布局文件中的控件标签的名字同MainActivity类中声明的控件类型一致），然后需要导入这个类（导入的快捷键：ctrl+shift+o）；")]),v._v(" "),i("p",[v._v("然后在"),i("code",[v._v("onCreate()")]),v._v("方法中通过"),i("code",[v._v("findViewById()")]),v._v("方法获取。")]),v._v(" "),i("h2",{attrs:{id:"三、设置view的属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#三、设置view的属性"}},[v._v("#")]),v._v(" 三、设置View的属性")]),v._v(" "),i("p",[v._v("设置View属性的方法有两种：")]),v._v(" "),i("p",[v._v("1.在布局文件"),i("code",[v._v("activity_main.xml")]),v._v("中设置；")]),v._v(" "),i("p",[v._v("2.在程序中设置：获取到代表View的对象后就可以通过调用该对象的方法设置该对象的属性；")]),v._v(" "),i("h2",{attrs:{id:"四．为view设置监听器"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#四．为view设置监听器"}},[v._v("#")]),v._v(" 四．为View设置监听器")]),v._v(" "),i("p",[v._v("顾名思义：就是监听控件对象发生的变化，例如：被点击、长期点击、发生滑动……，一个控件可以有多个监听器来监听它的行为，当执行到不同的操作时做出相应的反应。")]),v._v(" "),i("p",[v._v("那怎么使用监听器呢？怎样为控件绑定监听器呢？")]),v._v(" "),i("p",[v._v("主要分为以下四个步骤：")]),v._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),i("p",[v._v("1.获取代表控件的对象；")]),v._v(" "),i("p",[v._v("2.定义一个类，实现监听器接口；\n（监听器是一个对象，就是一个类）")]),v._v(" "),i("p",[v._v("3.生成监听器对象；")]),v._v(" "),i("p",[v._v("4.为控件绑定监听器对象；")]),v._v(" "),i("p",[v._v("虽然在Android里面监听器的种类非常多，而且不同控件的监听的方法也不一样，但是使用监听器的流程都是上述步骤。")])])])}),[],!1,null,null,null);t.default=_.exports}}]);