(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{371:function(t,a,e){"use strict";e.r(a);var _=e(42),n=Object(_.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"深入linearlayout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深入linearlayout"}},[t._v("#")]),t._v(" 深入LinearLayout")]),t._v(" "),e("p",[t._v("1.LinearLayout是布局的一种，布局就是规范控件的摆放方式，")]),t._v(" "),e("p",[t._v("而LinearLayout就是横向的或者纵向的将控件排成一排或一列，这就是线性布局。")]),t._v(" "),e("p",[t._v("这是Android里面最简单的一种布局方式。这种布局方式虽然简单，")]),t._v(" "),e("p",[t._v("但是如果掌握好的话也能够满足我们大部分应用程序开发中的布局需要（可以通过线性布局的嵌套来实现复杂的布局）。")]),t._v(" "),e("p",[t._v("2.使用layout_weight属性的要点")]),t._v(" "),e("p",[t._v("在LinearLayout布局方式里面的控件都可以使用这个属性，那么使用这个属性的要点是：")]),t._v(" "),e("p",[t._v("（1）子控件并未占满父控件的所有空间；")]),t._v(" "),e("p",[t._v("（2）layout_weight的值用于指定空闲空间的分配比例，也就是父控件剩余空间的分配比例。")]),t._v(" "),e("p",[t._v("例如：有两个控件，他们的layout_weight属性的值都为1的话，则这两个控件平分父控件剩余的空间占比。（注意：这个属性值不是控件所占空间的配比。）")]),t._v(" "),e("p",[t._v("（在这里要记住一个窍门：就是将控件的宽或者高的值设置为0dp，这样就相当于子控件没有占有父控件的位置，那么剩余的空间就是整个父控件的空间，这样就可以实现控件所占空间的配比）")])])}),[],!1,null,null,null);a.default=n.exports}}]);