(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{370:function(t,v,i){"use strict";i.r(v);var _=i(42),e=Object(_.a)({},(function(){var t=this,v=t.$createElement,i=t._self._c||v;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"activity生命周期"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#activity生命周期"}},[t._v("#")]),t._v(" Activity生命周期")]),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),i("p",[t._v("首先掌握：")]),t._v(" "),i("p",[t._v("一．如何在一个程序当中定义多个Activity；")]),t._v(" "),i("p",[t._v("二．启动一个Activity的方法；")]),t._v(" "),i("p",[t._v("三．Android当中的back stack；")]),t._v(" "),i("p",[t._v("再去理解：")]),t._v(" "),i("p",[t._v("四．Activity生命周期；")]),t._v(" "),i("p",[t._v("最后再去理解：")]),t._v(" "),i("p",[t._v("五．Activity对象的状态；")]),t._v(" "),i("p",[t._v("六．成对出现的生命周期函数；")])]),t._v(" "),i("h2",{attrs:{id:"一．如何在一个程序当中定义多个activity；"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#一．如何在一个程序当中定义多个activity；"}},[t._v("#")]),t._v(" 一．如何在一个程序当中定义多个Activity；")]),t._v(" "),i("p",[t._v("1.定义一个类，继承Activity；")]),t._v(" "),i("p",[t._v("2.在该类当中，复写Activity的onCreate方法；")]),t._v(" "),i("p",[t._v("3.在AndroidManifest.xml文件中注册该Activity；")]),t._v(" "),i("h2",{attrs:{id:"二．启动一个activity的方法；"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#二．启动一个activity的方法；"}},[t._v("#")]),t._v(" 二．启动一个Activity的方法；")]),t._v(" "),i("p",[t._v("1.生成一个Intent对象；（实际上Intent封装了你想做什么这件事；）")]),t._v(" "),i("p",[t._v("2.调用"),i("code",[t._v("setClass方法")]),t._v("设置所要启动的Activity；")]),t._v(" "),i("p",[t._v("(第一个参数是Context对象，Context是一个类，Activity是它的子类，该对象代表当前的Activity对象。第二个参数是Class对象，代表要启动的Activity类的Class对象)")]),t._v(" "),i("p",[t._v("3.调用startActivity方法启动Activity；")]),t._v(" "),i("h2",{attrs:{id:"三．android当中的back-stack；"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#三．android当中的back-stack；"}},[t._v("#")]),t._v(" 三．Android当中的back stack；")]),t._v(" "),i("p",[t._v("每当一个Activity对象新显示出来的时候，这个Activity对象就被压入到后退栈中，")]),t._v(" "),i("p",[t._v("当用户点击后退按钮的时候（按照后进先出的顺序），这个栈顶端的Activity就会被弹出来并且会被销毁。")]),t._v(" "),i("h2",{attrs:{id:"四．activity生命周期；"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#四．activity生命周期；"}},[t._v("#")]),t._v(" 四．Activity生命周期；")]),t._v(" "),i("p",[t._v("Activity的生命周期就是指：一个Activity对象从创建出来到销毁，中间经历过哪些阶段，每个阶段做了哪些事情。如下显示：")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",{staticStyle:{"text-align":"center"}},[t._v("生命周期函数")]),t._v(" "),i("th",{staticStyle:{"text-align":"center"}},[t._v("调用时机")])])]),t._v(" "),i("tbody",[i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("onCreate")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("在Activity对象被第一次创建时调用")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("onStart")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("在Activity变得可见时调用该函数")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("onResume")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("在Activity开始准备与用户交互时调用该方法")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("onPause")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("当系统即将启动另外一个Activity之前调用")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("onStop")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("当前Activity变得不可见时调用该方法")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("onDestroy")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("当前Activity被销毁之前调用该方法")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"center"}},[t._v("onRestart")]),t._v(" "),i("td",{staticStyle:{"text-align":"center"}},[t._v("当一个Activity再次启动之前调用该方法")])])])]),t._v(" "),i("h2",{attrs:{id:"五．activity对象的状态；"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#五．activity对象的状态；"}},[t._v("#")]),t._v(" 五．Activity对象的状态；")]),t._v(" "),i("p",[t._v("根据Android官方说明文档的描述：Activity对象被分为三种状态：")]),t._v(" "),i("p",[t._v("1.Resumed：Activity对象处于正常的运行状态；")]),t._v(" "),i("p",[t._v("2.Paused：可以理解为“暂停状态”，另一个Activity位于前端，但是本Activity还可见，那么本Activity就是处于暂停状态；")]),t._v(" "),i("p",[t._v("典型的例子：就是另一个Activity以对话框的形式出现，它并没有完全覆盖住屏幕，后面那个Activity还是可见的。")]),t._v(" "),i("p",[t._v("3.Stopped：另一个Activity位于前端，完全遮挡本Activity；")]),t._v(" "),i("p",[t._v("需要注意的是：Paused与Stopped这两种状态下：虽然当前可见的Activity已近覆盖或完全覆盖掉后面的Activity，但这并不意味着后面的那个Activity就会释放掉所占有的资源、内存,释放资源这个操作要靠你自己来完成。这也就需要下面所提到的成堆的生命周期函数。")]),t._v(" "),i("h2",{attrs:{id:"六．成对出现的生命周期函数；"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#六．成对出现的生命周期函数；"}},[t._v("#")]),t._v(" 六．成对出现的生命周期函数；")]),t._v(" "),i("p",[i("img",{attrs:{src:"/documents/img/android/04.png",alt:"1"}})]),t._v(" "),i("p",[t._v("这是Android官方文档所提供的Activity生命周期的描述。")]),t._v(" "),i("p",[t._v("由图可知：Activity启动的时候先执行"),i("code",[t._v("onCreate()")]),t._v("、"),i("code",[t._v("onStart()")]),t._v("、"),i("code",[t._v("onResume()")]),t._v("方法，然后进入运行状态，也就是我们所说的Resumed的状态，")]),t._v(" "),i("p",[t._v("然后如果另外一个Activity启动的时候，就会执行"),i("code",[t._v("onPause()")]),t._v("方法，这时候该Activity处于暂停的状态，也就是我们所说的Paused的状态，这个时候如果启动的那个Activity把我们当前的这个Activity遮挡住了，那么就会执行当前这个Activity的"),i("code",[t._v("onStop()")]),t._v("方法，那么当前这个Activity进入到停止状态。")]),t._v(" "),i("p",[t._v("如果要销毁这个Activity就先执行"),i("code",[t._v("onDestory()")]),t._v("方法然后再销毁。这就是我们所说的生命周期。")]),t._v(" "),i("p",[t._v("但是我们为什么说“成对出现的生命周期函数”呢？，从图中不难看出：")]),t._v(" "),i("p",[t._v("1.如果当前的这个Activity执行完"),i("code",[t._v("onPause()")]),t._v("\n方法处于暂停状态后，如果想重新进入到运行状态，则需直接去调用执行"),i("code",[t._v("onResume()")]),t._v("方法；")]),t._v(" "),i("p",[t._v("2.如果当前的这个Activity进入的是停止状态，也就是"),i("code",[t._v("onStop()")]),t._v("\n方法执行完了以后，若想再回到运行状态，它会在执行完"),i("code",[t._v("onRestart()")]),t._v("方法后再去执行"),i("code",[t._v("onStart()")]),t._v("方法。")]),t._v(" "),i("p",[t._v("结合以上两点，从这个角度我们可以看出：")]),t._v(" "),i("p",[i("code",[t._v("onPause()")]),t._v("和"),i("code",[t._v("onResume()")]),t._v("是一对；")]),t._v(" "),i("p",[i("code",[t._v("onStop()")]),t._v("和"),i("code",[t._v("onStart()")]),t._v("是一对；")]),t._v(" "),i("p",[t._v("那同理："),i("code",[t._v("onCreate()")]),t._v("和"),i("code",[t._v("onDestory()")]),t._v("是一对。")]),t._v(" "),i("p",[t._v("在理解这些以后，我们可以根据应用程序的需要在不同的生命周期函数中写不同的代码。")])])}),[],!1,null,null,null);v.default=e.exports}}]);